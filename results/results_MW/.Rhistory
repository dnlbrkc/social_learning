ind.learn<-ind.learn[ind.learn!=0]
#those who do not learn individually adopt the socially acquired option
no.learn <- setdiff(1:100,ind.learn)
if(length(no.learn)>0){
agents[[i]][no.learn,] <- agents2[no.learn,]
}
} else if (s==5) { #IMPLEMENT RANDOM COPYING
ind.learn<-vector(length=n.agents)
agents2 <- agents[[i]]
for (j in 1:n.agents) {
agents2[j,] <- agents[[i]][samples[j],]
}
ind.learn<-ind.learn[ind.learn!=0]
#those who do not learn individually adopt the socially acquired option
no.learn <- setdiff(1:100,ind.learn)
if(length(no.learn)>0){
agents[[i]][no.learn,] <- agents2[no.learn,]
}
} else { # NO SOCIAL LEARNING CONDITION
if(i==100){
agents[[i]]<-agents[[i-1]]
agents[[i]][,2]<-landscape[agents[[i]][,1]+1,2] } else {
agents[[i]]<-agents[[i-1]]
}
ind.learn<-1:100
}
#IMPLEMENT INDIVIDUAL LEARNING
if(length(ind.learn)>=1){
h=0
choose<-vector()
for (n in c(ind.learn)){
h=h+1
choose[h] <- sample(bin_neighbors[,agents[[i]][n,1]+1],1)
}
choose1 <- choose+1
pay<-sapply(1:length(choose1), function(x) landscape[choose1[x],2])
new<-cbind(choose,pay)
l=0
for (n in c(ind.learn)){
l=l+1
agents[[i]][n,] <- new[l,]
}
}
#COMPARE PAYOFFS AFTER LEARNING AND DECIDE WHETHER OR NOT TO SWITCH
switching <- ifelse(agents[[i-1]][,2] < agents[[i]][,2],1,0)*1:n.agents
not.switching <- setdiff(1:100,switching[switching!=0])
agents[[i]][not.switching,] <- agents[[i-1]][not.switching,]
agents[[i]][,2] <- landscape[agents[[i]][,1],2]
}
perf.time[,s] <- sapply(1:tsteps, function(x) mean(agents[[x]][,2]))
diversity[,s] <- sapply(1:tsteps, function(x) nrow(unique(agents[[x]])))
}
perf.time
setwd("~/Desktop/drastic")
data <- list.files(pattern="Rdata")
ls <- matrix(0,ncol=6,nrow=200)
for (i in 1:length(data)){
load(data[i])
ls <- ls + res[[1]]
}
strats1 <- ls/length(data)
data <- list.files(pattern="Rdata")
ls <- matrix(0,ncol=6,nrow=200)
for (i in 1:length(data)){
load(data[i])
ls <- ls + res[[1]]
}
strats2 <- ls/length(data)
strats1
colnames(strats1) <- colnames(strats2) <- c("Best member (s=3)",
"Best member (s=9)",
"Conformity (s=3)",
"Conformity (s=9)",
"Random copying",
"Individual learning")
melt_1 <- melt(strats1)
melt_2 <- melt(strats2)
colnames(melt_1) <- colnames(melt_2) <- c("x","Strategy","value")
plot1 <- ggplot(melt_1,aes(x=x,y=value,color=Strategy,linetype=Strategy,size=Strategy))+
geom_line()+
xlab("Time")+
ylab("Average performance")+
theme(strip.background = element_blank())+
scale_linetype_manual(values=c(3,2,1,1,9,2))+
scale_size_manual(values=c(0.5,0.7,0.5,1,0.7,0.7))+
scale_color_manual(values=c("#F8766D","#F8766D","#00BFC4","#00BFC4","#000000",'#999999'))+
theme(legend.position="bottom",
legend.direction="horizontal",
legend.title=element_blank(),
legend.key.width=unit(0.6,"cm"),
plot.title=element_text(size=12,face="plain")) + ylim(0,0.8)+
ggtitle("Simple environment (N=15, K=0)")
plot2 <- ggplot(melt_2,aes(x=x,y=value,color=Strategy,linetype=Strategy,size=Strategy))+
geom_line()+
xlab("Time")+
ylab("Average performance")+
theme(strip.background = element_blank())+
scale_linetype_manual(values=c(3,2,1,1,9,2))+
scale_size_manual(values=c(0.5,0.7,0.5,1,0.7,0.7))+
scale_color_manual(values=c("#F8766D","#F8766D","#00BFC4","#00BFC4","#000000",'#999999'))+
theme(legend.position="bottom",
legend.direction="horizontal",
legend.title=element_blank(),
legend.key.width=unit(0.6,"cm"),
plot.title=element_text(size=12,face="plain")) + ylim(0,0.8)+
ggtitle("Complex environment (N=15, K=7)")
p <- plot_grid( plot1 + theme(legend.position="none"),
plot2 + theme(legend.position="none"),
align = 'vh',
labels = c("A", "B"),
hjust = -1,
nrow = 1
)
grobs <- ggplotGrob(plot1)$grobs
legend <- grobs[[which(sapply(grobs, function(x) x$name) == "guide-box")]]
p2 <- plot_grid( p, legend, ncol=1,rel_heights=c(1,0.2))
p2
setwd("~/Desktop/social_learning/")
setwd("results/results_Environmental_Change/drastic/")
data <- list.files(pattern="Rdata")
ls <- matrix(0,ncol=6,nrow=200)
for (i in 1:length(data)){
load(data[i])
ls <- ls + res[[1]]
}
strats1 <- ls/length(data)
setwd("..")
setwd("moderate")
data <- list.files(pattern="Rdata")
ls <- matrix(0,ncol=6,nrow=200)
for (i in 1:length(data)){
load(data[i])
ls <- ls + res[[1]]
}
strats2 <- ls/length(data)
colnames(strats1) <- colnames(strats2) <- c("Best member (s=3)",
"Best member (s=9)",
"Conformity (s=3)",
"Conformity (s=9)",
"Random copying",
"Individual learning")
melt_1 <- melt(strats1)
melt_2 <- melt(strats2)
colnames(melt_1) <- colnames(melt_2) <- c("x","Strategy","value")
plot1 <- ggplot(melt_1,aes(x=x,y=value,color=Strategy,linetype=Strategy,size=Strategy))+
geom_line()+
xlab("Time")+
ylab("Average performance")+
theme(strip.background = element_blank())+
scale_linetype_manual(values=c(3,2,1,1,9,2))+
scale_size_manual(values=c(0.5,0.7,0.5,1,0.7,0.7))+
scale_color_manual(values=c("#F8766D","#F8766D","#00BFC4","#00BFC4","#000000",'#999999'))+
theme(legend.position="bottom",
legend.direction="horizontal",
legend.title=element_blank(),
legend.key.width=unit(0.6,"cm"),
plot.title=element_text(size=12,face="plain")) + ylim(0,0.8)+
ggtitle("Drastic environmenangetal ch (N=15, K=0)")
plot2 <- ggplot(melt_2,aes(x=x,y=value,color=Strategy,linetype=Strategy,size=Strategy))+
geom_line()+
xlab("Time")+
ylab("Average performance")+
theme(strip.background = element_blank())+
scale_linetype_manual(values=c(3,2,1,1,9,2))+
scale_size_manual(values=c(0.5,0.7,0.5,1,0.7,0.7))+
scale_color_manual(values=c("#F8766D","#F8766D","#00BFC4","#00BFC4","#000000",'#999999'))+
theme(legend.position="bottom",
legend.direction="horizontal",
legend.title=element_blank(),
legend.key.width=unit(0.6,"cm"),
plot.title=element_text(size=12,face="plain")) + ylim(0,0.8)+
ggtitle("Moderate environmental change (N=15, K=7)")
p <- plot_grid( plot1 + theme(legend.position="none"),
plot2 + theme(legend.position="none"),
align = 'vh',
labels = c("A", "B"),
hjust = -1,
nrow = 1
)
grobs <- ggplotGrob(plot1)$grobs
legend <- grobs[[which(sapply(grobs, function(x) x$name) == "guide-box")]]
p2 <- plot_grid( p, legend, ncol=1,rel_heights=c(1,0.2))
save_plot("~/Desktop/env_change.pdf",p2,base_height=4,base_width=8)
setwd("..")
setwd("..")
plot1 <- ggplot(melt_1,aes(x=x,y=value,color=Strategy,linetype=Strategy,size=Strategy))+
geom_line()+
xlab("Time")+
ylab("Average performance")+
theme(strip.background = element_blank())+
scale_linetype_manual(values=c(3,2,1,1,9,2))+
scale_size_manual(values=c(0.5,0.7,0.5,1,0.7,0.7))+
scale_color_manual(values=c("#F8766D","#F8766D","#00BFC4","#00BFC4","#000000",'#999999'))+
theme(legend.position="bottom",
legend.direction="horizontal",
legend.title=element_blank(),
legend.key.width=unit(0.6,"cm"),
plot.title=element_text(size=12,face="plain")) + ylim(0,0.8)+
ggtitle("Drastic environmental change (N=15, K=7)")
plot2 <- ggplot(melt_2,aes(x=x,y=value,color=Strategy,linetype=Strategy,size=Strategy))+
geom_line()+
xlab("Time")+
ylab("Average performance")+
theme(strip.background = element_blank())+
scale_linetype_manual(values=c(3,2,1,1,9,2))+
scale_size_manual(values=c(0.5,0.7,0.5,1,0.7,0.7))+
scale_color_manual(values=c("#F8766D","#F8766D","#00BFC4","#00BFC4","#000000",'#999999'))+
theme(legend.position="bottom",
legend.direction="horizontal",
legend.title=element_blank(),
legend.key.width=unit(0.6,"cm"),
plot.title=element_text(size=12,face="plain")) + ylim(0,0.8)+
ggtitle("Moderate environmental change (N=15, K=7)")
p <- plot_grid( plot1 + theme(legend.position="none"),
plot2 + theme(legend.position="none"),
align = 'vh',
labels = c("A", "B"),
hjust = -1,
nrow = 1
)
grobs <- ggplotGrob(plot1)$grobs
legend <- grobs[[which(sapply(grobs, function(x) x$name) == "guide-box")]]
p2 <- plot_grid( p, legend, ncol=1,rel_heights=c(1,0.2))
save_plot("~/Desktop/env_change.pdf",p2,base_height=4,base_width=8)
setwd("..")
setwd("..")
setwd("social_learning/")
rm(list=ls())
setwd("results/results_MW/")
data <- list.files(pattern="Resultslattice")
ls <- matrix(0,ncol=2,nrow=200)
for (i in 1:length(data)){
load(data[i])
ls <- ls + res[[1]]
}
pz1 <- ls/length(data)
data <- list.files(pattern="Resultsmax-max-betweenness")
ls <- matrix(0,ncol=2,nrow=200)
for (i in 1:length(data)){
load(data[i])
ls <- ls + res[[1]]
}
pz2 <- ls/length(data)
data <- list.files(pattern="Resultsmax-mean-betweenness")
ls <- matrix(0,ncol=2,nrow=200)
for (i in 1:length(data)){
load(data[i])
ls <- ls + res[[1]]
}
pz3 <- ls/length(data)
data <- list.files(pattern="Resultsmax-mean-clustering")
ls <- matrix(0,ncol=2,nrow=200)
for (i in 1:length(data)){
load(data[i])
ls <- ls + res[[1]]
}
pz4 <- ls/length(data)
data <- list.files(pattern="Resultsmax-var-constraint")
ls <- matrix(0,ncol=2,nrow=200)
for (i in 1:length(data)){
load(data[i])
ls <- ls + res[[1]]
}
pz5 <- ls/length(data)
data <- list.files(pattern="Resultsfully")
ls <- matrix(0,ncol=2,nrow=200)
for (i in 1:length(data)){
load(data[i])
ls <- ls + res[[1]]
}
pz6 <- ls/length(data)
data <- list.files(pattern="Resultsmax-max-closeness")
ls <- matrix(0,ncol=2,nrow=200)
for (i in 1:length(data)){
load(data[i])
ls <- ls + res[[1]]
}
pz7 <- ls/length(data)
data <- list.files(pattern="Resultsmin-max-closeness")
ls <- matrix(0,ncol=2,nrow=200)
for (i in 1:length(data)){
load(data[i])
ls <- ls + res[[1]]
}
pz8 <- ls/length(data)
data <- list.files(pattern="Resultsmin-mean-betweenness")
ls <- matrix(0,ncol=2,nrow=200)
for (i in 1:length(data)){
load(data[i])
ls <- ls + res[[1]]
}
pz9 <- ls/length(data)
data <- list.files(pattern="Resultsmin-mean-clustering")
ls <- matrix(0,ncol=2,nrow=200)
for (i in 1:length(data)){
load(data[i])
ls <- ls + res[[1]]
}
pz10 <- ls/length(data)
bestnet <- cbind(pz1[,1],
pz2[,1],
pz3[,1],
pz4[,1],
pz5[,1],
pz6[,1],
pz7[,1],
pz8[,1],
pz9[,1],
pz10[,1])
majnet <- cbind(pz1[,2],
pz2[,2],
pz3[,2],
pz4[,2],
pz5[,2],
pz6[,2],
pz7[,2],
pz8[,2],
pz9[,2],
pz10[,2])
colnames(bestnet) <- colnames(majnet) <- c("lattice",
"max_max_betweenness",
"max_mean_betweenness",
"max_mean_clustering",
"max_var_constraint",
"fully_connected",
"max_max_closeness",
"min_max_closeness",
"min_mean_betweenness",
"min_mean_clustering")
bestnet <- as.data.frame(bestnet)
majnet <- as.data.frame(majnet)
best_ineff <- bestnet %>% select(lattice:max_var_constraint) %>% rowMeans()
best_eff <- bestnet %>% select(fully_connected:min_mean_clustering) %>% rowMeans()
maj_ineff <- majnet %>% select(lattice:max_var_constraint) %>% rowMeans()
maj_eff <- majnet %>% select(fully_connected:min_mean_clustering) %>% rowMeans()
results <- cbind(best_ineff,best_eff,maj_ineff,maj_eff)
#best
ineff_up <- bestnet %>% mutate(x=1:200) %>% filter(x==200) %>% select(lattice:max_var_constraint)  %>% which.max()
ineff_low <- bestnet %>% mutate(x=1:200) %>% filter(x==200) %>% select(lattice:max_var_constraint)  %>% which.min()
eff_up <- bestnet %>% mutate(x=1:200) %>% filter(x==200) %>% select(fully_connected:min_mean_clustering)  %>% which.max()
eff_low <- bestnet %>% mutate(x=1:200) %>% filter(x==200) %>% select(fully_connected:min_mean_clustering)  %>% which.min()
beub <-  bestnet %>% select(fully_connected:min_mean_clustering) %>% select(eff_up)
belb <- bestnet %>% select(fully_connected:min_mean_clustering) %>% select(eff_low)
biub<-  bestnet  %>% select(lattice:max_var_constraint) %>% select(ineff_up)
bilb <- bestnet  %>% select(lattice:max_var_constraint) %>% select(ineff_low)
#majority
ineff_up <- majnet %>% mutate(x=1:200) %>% filter(x==200) %>% select(lattice:max_var_constraint)  %>% which.max()
ineff_low <- majnet %>% mutate(x=1:200) %>% filter(x==200) %>% select(lattice:max_var_constraint)  %>% which.min()
eff_up <- majnet %>% mutate(x=1:200) %>% filter(x==200) %>% select(fully_connected:min_mean_clustering)  %>% which.max()
eff_low <- majnet %>% mutate(x=1:200) %>% filter(x==200) %>% select(fully_connected:min_mean_clustering)  %>% which.min()
meub <-  majnet %>% select(fully_connected:min_mean_clustering) %>% select(eff_up)
melb <- majnet %>% select(fully_connected:min_mean_clustering) %>% select(eff_low)
miub <-  majnet %>% select(lattice:max_var_constraint) %>% select(ineff_up)
milb <-  majnet %>% select(lattice:max_var_constraint) %>% select(ineff_low)
#create plot
melt_df <- melt(results)
melt2 <- cbind(melt_df, as.vector(c(as.numeric(unlist(belb)),
as.numeric(unlist(bilb)),
as.numeric(unlist(melb)),
as.numeric(unlist(milb)))),
as.vector(c(as.numeric(unlist(beub)),
as.numeric(unlist(biub)),
as.numeric(unlist(meub)),
as.numeric(unlist(miub)))))
colnames(melt2) <- c("Time",
"Strategy",
"value",
"LB",
"UB")
p1 <- melt2 %>%
mutate(x=rep(1:200,4),strat=rep(c("Strategy: best member (s=3)",
"Strategy: conformity (s=3)"),each=400 ) )
df1 <- p1[p1$Strategy=="best_eff",]
df2 <- p1[p1$Strategy=="best_ineff",]
df3 <- p1[p1$Strategy=="maj_eff",]
df4 <- p1[p1$Strategy=="maj_ineff",]
p1$Strategy <- rep(rep(c("Inefficient networks","Efficient networks"),2),each=200)
#sds
data <- list.files(pattern="Resultslattice")
ls <- matrix(0,ncol=2,nrow=length(data))
for (i in 1:length(data)){
load(data[i])
ls[i,] <- res[[1]][200,]
}
sd1 <- ls
data <- list.files(pattern="Resultsmax-max-betweenness")
ls <- matrix(0,ncol=2,nrow=length(data))
for (i in 1:length(data)){
load(data[i])
ls[i,] <- res[[1]][200,]
}
sd2 <- ls
data <- list.files(pattern="Resultsmax-mean-betweenness")
ls <- matrix(0,ncol=2,nrow=length(data))
for (i in 1:length(data)){
load(data[i])
ls[i,] <- res[[1]][200,]
}
sd3 <- ls
data <- list.files(pattern="Resultsmax-mean-clustering")
ls <- matrix(0,ncol=2,nrow=length(data))
for (i in 1:length(data)){
load(data[i])
ls[i,] <- res[[1]][200,]
}
sd4 <- ls
data <- list.files(pattern="Resultsmax-var-constraint")
ls <- matrix(0,ncol=2,nrow=length(data))
for (i in 1:length(data)){
load(data[i])
ls[i,] <- res[[1]][200,]
}
sd5 <- ls
data <- list.files(pattern="Resultsfully")
ls <- matrix(0,ncol=2,nrow=length(data))
for (i in 1:length(data)){
load(data[i])
ls[i,] <- res[[1]][200,]
}
sd6 <- ls
data <- list.files(pattern="Resultsmax-max-closeness")
ls <- matrix(0,ncol=2,nrow=length(data))
for (i in 1:length(data)){
load(data[i])
ls[i,] <- res[[1]][200,]
}
sd7 <- ls
data <- list.files(pattern="Resultsmin-max-closeness")
ls <- matrix(0,ncol=2,nrow=length(data))
for (i in 1:length(data)){
load(data[i])
ls[i,] <- res[[1]][200,]
}
sd8 <- ls
data <- list.files(pattern="Resultsmin-mean-betweenness")
ls <- matrix(0,ncol=2,nrow=length(data))
for (i in 1:length(data)){
load(data[i])
ls[i,] <- res[[1]][200,]
}
sd9 <- ls
data <- list.files(pattern="Resultsmin-mean-clustering")
ls <- matrix(0,ncol=2,nrow=length(data))
for (i in 1:length(data)){
load(data[i])
ls[i,] <- res[[1]][200,]
}
sd10 <- ls
sdZ <-  rbind(apply(sd1,2,sd),
apply(sd2,2,sd),
apply(sd3,2,sd),
apply(sd4,2,sd),
apply(sd5,2,sd),
apply(sd6,2,sd),
apply(sd7,2,sd),
apply(sd8,2,sd),
apply(sd9,2,sd),
apply(sd10,2,sd))
avg_best <- bestnet
avg_maj <- majnet
last_best <- avg_best[200,]
last_maj <- avg_maj[200,]
sd_best <- apply(bestnet,2,sd)
sd_maj <- apply(majnet,2,sd)
df <- cbind(as.numeric(last_best),as.numeric(last_maj))
mdf <- melt(df)
mdf <- cbind(mdf,rep(c("Strategy: best member (s=3)","Strategy: conformity (s=3)"),each=10),
rep(c("a","b","a","b"),each=5))
SE_best <- sdZ[,1]/sqrt(1000)
SE_conf <- sdZ[,2]/sqrt(1000)
mdf <- cbind(mdf,c(SE_best,SE_conf))
colnames(mdf) <- c("variable","condition","value","network","net_type","SE")
mdf$variable <- factor(mdf$variable)
levels(mdf$variable)  <- c("Lattice",
"Max max betweenness",
"Max mean betweenness",
"Max mean clustering",
"Max var constraint",
"Fully connected",
"Max max closeness",
"Min max closeness",
"Min mean betweenness",
"Min mean clustering")
plot1 <- ggplot(p1,aes(x=Time,y=value,color=Strategy,linetype=Strategy))+
geom_ribbon(data=df1,aes(x = Time,ymin = LB, ymax = UB), inherit.aes = FALSE,fill = "#00BFC4",alpha=0.3)+
geom_ribbon(data=df2,aes(x = Time,ymin = LB, ymax = UB), inherit.aes = FALSE,fill = "#F8766D",alpha=0.3)+
geom_ribbon(data=df3,aes(x = Time,ymin = LB, ymax = UB), inherit.aes = FALSE,fill = "#00BFC4",alpha=0.3)+
geom_ribbon(data=df4,aes(x = Time,ymin = LB, ymax = UB), inherit.aes = FALSE,fill = "#F8766D",alpha=0.3)+
geom_line(size=1.5)+ facet_wrap(~strat,scales="free_y")+
scale_linetype_manual(values=c(1,2))+
scale_y_continuous(breaks=seq(0,0.9,0.1),labels=seq(0,0.9,0.1),limits=c(0,0.9)) +
theme(strip.background = element_blank()) +
scale_color_manual(values=c("#F8766D","#00BFC4"))+
xlab("Time") + ylab("Average performance")+
theme(legend.position = "bottom",
legend.title=element_blank(),
legend.text=element_text(size=15),
legend.key.size=unit(1.5,"cm"))
levels(mdf$net_type) <- c("Inefficient networks","Efficient networks")
mdf$net_type <- factor(mdf$net_type, levels=c("Efficient networks","Inefficient networks"))
plot2 <- ggplot(mdf,aes(x=variable,y=value,color=net_type,shape=net_type)) + facet_wrap(~network,scale="free_y") +
geom_point(size=2)+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
theme(legend.position="bottom",
legend.title=element_blank())+
theme(strip.background = element_blank())+
ylab("Performance at t=200")+
xlab("")+
geom_errorbar(aes(ymin=value-2*SE, ymax=value+2*SE), width=.2)+
scale_y_continuous(breaks=seq(0.5,0.85,0.1),labels=seq(0.5,0.85,0.1),limits=c(0.5,0.86))+
scale_color_manual(values=c("#F8766D","#00BFC4"))+
scale_shape_manual(values=c(19,17))
